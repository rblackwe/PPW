%!PS-Adobe-3.0 EPSF-3.0%%BoundingBox:  0 0 663 165 %%Title: (logo redraw.cvx) %%Creator: Canvas (X) %%CreationDate: (06/) %%DocumentProcSets: Deneba_CanvasCustomColors%%+ CVDict%%DocumentFonts: %%DocumentNeededFonts: %%DocumentProcessColors: Cyan Magenta Yellow Black%%EndComments%%BeginProlog %%BeginResource: procset CVDict%%Title: Deneba standard graphics%%Version: 1.02%%CreationDate: 10/14/99%%Copyright: (C) 1994, 1999 Deneba Systems. All Rights Reserveduserdict /CVDict 200 dict putCVDict begin/invalidcolortable? true def   /level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse deflevel2 not { /xshow {0 currentpoint 5 -1 roll {pop pop moveto dup 1 add 3 1 roll exch dup 4 1 roll exch get 0 rmoveto currentpoint} exch kshowpop pop pop pop} def } if/initialize{CVDict{dup xcheck{bind}if pop pop}forallcurrentscreen /_sp exch def /_sa exch def /_sf exch def/DefaultScreen{_sf _sa /_sp load}def/DefaultScreenProc{ /_sp load}def/setstrokeadjust where{pop true}{false}ifelse{/sa /setstrokeadjust load def/li /lineto load def/mt /moveto load def/ct /curveto load def/lh { currentpoint exch pop lineto}bind def/lv { currentpoint pop exch lineto}bind def}{/sa{{currentdict StrokeAdjustDict ne{StrokeAdjustDict begin}if}{ currentdict StrokeAdjustDict eq{end}if}ifelse} bind defuserdict /StrokeAdjustDict 100 dict putStrokeAdjustDict begin/_xl{transform.25 sub round .25 add exch.25 sub round .25 add exchitransform}bind def/li{ _xl lineto}bind def/mt{ _xl moveto}bind def/ct{ _xl curveto}bind def/lh { dup _xl pop currentpoint exch pop lineto}bind def/lv { dup _xl pop currentpoint pop exch lineto}bind def/rp{_xl/cv_b xdf/cv_r xdf_xl/cv_t xdf/cv_l xdfcv_l cv_t movetocv_r cv_t linetocv_r cv_b linetocv_l cv_b linetoclosepath}bind defend}ifelse}def/terminate{userdict /StrokeAdjustDict known {currentdict StrokeAdjustDict eq{end}if}ifcurrentdict CVDict eq{end}if}def/mxMax 64 def/mxStk [mxMax {matrix} repeat]def/mxIdx 0 def/stm{mxStk mxIdx 0 lt {/mxIdx 0 store}if mxIdx get currentmatrix pop /mxIdx mxIdx 1 add store}def/rtm{mxIdx 1 ge {/mxIdx mxIdx 1 sub store mxStk mxIdx get setmatrix}if }def/scl { 72 div exch 72 div exch scale } def/scli { 72 exch div exch 72 exch div exch scale } def/_cvmtx matrix def/_txtmtx matrix def/_initmtx matrix def/xdf{exch def}def/min{2 copy gt{exch}if pop}def/max{2 copy lt{exch}if pop}def/CVvec 256 array def/T true def/F false def/_id 0 def/_encodindex 0 def/_encodArr 3 array def/_fd 0 def/_textSave null def/_letterSpace 0 def/_spaceXtra 0 def/_PageSave null def/_penh 1.0 def/_penv 1.0 def/save0 null def/_w 0 def/_h 0 def/_ds 0 def/hct false def/pw 0 def/wdif 0 def/temp 0 def/currot 0 def/savehandler null def/ia 0 def/ix 0 def/ixn 1 def/MultipleDataSources false def /debug{dup /$eps exch not def{/savehandler errordict /handleerror get deferrordict/handleerror{$error beginnewerror{/newerror false defshowpage72 72 scale/Helvetica findfont .2 scalefont setfont.25 9.6 moveto(Error: )showerrorname{dup type/stringtype ne{(converted error name will end up in this string)cvs}ifshow}exec.25 9.4 moveto(Offending Command: )show/command load{dup type/stringtype ne{(converted command name will end up in this string)cvs}ifshow}exec.25 9.2 moveto(Stack: )showostack{.25 currentpoint .2 sub exch pop movetodup type/stringtype ne{dup type/integertype eq1 index type/realtype eq or1 index type/nametype eq ornot {type}if(converted stack will end up in this string)cvs}ifshow}forallshowpageCVDict /savehandler get exec}ifend}put}if}def/lc{setlinecap}def/lj{setlinejoin}def/lm{setmiterlimit}def/lf{setflat}def/cp{closepath}def/np{newpath}def/$psz 30 array def/$pix 0 def/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def/li{lineto} def/lh{currentpoint exch pop lineto}def/lv{currentpoint pop exch lineto}def/mt{moveto} def/_cv_mh{currentpoint exch pop moveto}def/_cv_mv{currentpoint pop exch moveto}def/ct{curveto} def/rt{4 -2 roll movetodup 0 exch rlinetoexch 0 rlinetoneg 0 exch rlinetoclosepath}def/_hr{{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}}def/_cs null def/fg{setgray}def/setcmykcolor where {pop true}{false}ifelse{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse/setcolorspace where {pop true}{false}ifelse{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse/$cc 5 array def/findcmykcustomcolor where {pop true}{false}ifelsenot {/findcmykcustomcolor{$cc astore}def}if/setcustomcolor where {pop true}{false}ifelsenot{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}if/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def/setseparationgray where {pop true}{false}ifelsenot{/setseparationgray {systemdict /setgray get exec} def}if/sg{ setseparationgray}def/sp{/_penv xdf/_penh xdf}def/rp{/cv_b xdf/cv_r xdf/cv_t xdf/cv_l xdfcv_l cv_t movetocv_r cv_t linetocv_r cv_b linetocv_l cv_b linetoclosepath}def/rr{/yradius xdf/xradius xdf/cv_b xdf/cv_r xdf/cv_t xdf/cv_l xdfcv_l xradius add cv_t movetocv_r xradius sub cv_t lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale1 0 1 1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_r cv_b yradius sub lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale0 1 -1 1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_l xradius add cv_b lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale-1 0 -1 -1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_l cv_t yradius add lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale0 -1 1 -1 1 arcto 4{pop}repeat_cvmtx setmatrixclosepath}def/ep{_cvmtx currentmatrix poptranslatescale1 0 moveto0 0 1 0 360 arcclosepath_cvmtx setmatrix}def/wd{_cvmtx currentmatrix poptranslatescale0 0 moveto0 0 1 5 -2 roll arcnclosepath_cvmtx setmatrix}def/as{_cvmtx currentmatrix poptranslatescale0 0 1 5 -2 roll arcn_cvmtx setmatrix}def/ds{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def/df{fill}def/de{eofill}def/_gstk 5 array def/_gstkc 0 def/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def/hs{newpath gsave stm}def/hc{/_hr load exch get exec newpath}def/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq not{aload pop moveto}{pop}ifelse dup /_cf get setfontdup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def/id{ /_id xdf}def/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.% All rights reserved.level2 { save /dontloadlevel1 xdf }if/startnoload{{/noload save def} if}def/endnoload{{noload restore}if }def/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def/ncolors 1 def/colorimage where{pop true}{false}ifelse{/ncolors 0statusdict begin /processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known{pop {deviceinfo /Colors get}}if}if}ifelse end defncolors 0 ne{/colorimage testsystemdict/setcolortransfer testsystemdict/currentcolortransfer testsystemdict/currentcmykcolor testsystemdictand and and not{/ncolors 0 def}if}if}ifncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}ifncolors 1 eq dup dup not startnoload{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] cvx bind settransfer _w _h 8 _imatrix _ds image}def}ifnot endnoloadncolors dup 3 eq exch 4 eq ordup dup not startnoload{/nullproc{{}}def/concatutil{/exec load7 -1 roll /exec load}def/defsubclut{1 add getinterval def}def/spconcattransfer   {/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ldcurrentcolortransfer[{Aclut ncompute}concatutil] cvx[{Bclut ncompute}concatutil] cvx[{Cclut ncompute}concatutil] cvx[{Dclut ncompute}concatutil] cvxsetcolortransfer}def/setuprgbcluts{/bit3x rgbclut length 3 sub def/bit1x bit3x 3 idiv def/rclut rgbclut def/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  endnoload ncolors 3 eq dup dup not startnoload{/3compute{exch bit3x mulround cvi get 255 div}def/doclutimage{%/rgbclut xdf pop setuprgbcluts/3compute rclut gclut bclut dupspconcattransfer _w _h 8 _imatrix[/_ds load /exec load /dup load dup]cvxnullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload{/stuffclut{cmykindex 3 -1 roll put}def/ftoint{1 exch sub 255 mul round cvi}def/4compute { exch bit4x mul round cvi get 255 div } def/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def/cmykclut bit4x 4 add string def/cclut cmykclut def/mclut cclut 1 bit4x defsubclut/yclut cclut 2 bit4x defsubclut/kclut cclut 3 bit4x defsubclut/cmykindex 0 def0 1 bit1x{dup /cmykindex exch bit1x exch sub 4 mul def3 mul dup rclut exch get 255 div exch dup gclut exch get 255 divexch bclut exch get 255 divsetrgbcolor currentcmykcolorftoint kclut stuffclutftoint yclut stuffclutftoint mclut stuffclutftoint cclut stuffclut}for}def/doclutimage{invalidcolortable?{computecmykclut}if/4compute cclut mclut yclut kclut spconcattransfer_w _h 8 _imatrix[/_ds load /exec load/dup load dup dup] cvx nullproc nullproc nullproc true 4 colorimage}def}ifnot endnoloadncolors 0 eqdup dup not startnoload{/colorexpand{mystringexp 0 rgbclut3 copy7 -1 roll{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forallpop pop pop pop pop}def/createexpandstr{/mystringexp exch st0 length mul string def}def/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix[/_ds load /exec load /colorexpand load /exec load] cvxfalse 3 colorimage}def}if not endnoloadlevel2 { dontloadlevel1 restore }iflevel2 not{ save /dontloadlevel2 xdf }if/rgbclut 0 def/doclutimage{/hival 255 def [/Indexed /DeviceRGB hival rgbclut] setcolorspace_imagedict dup begin /Width _w def /Height _h def  /Decode [0 hival] def  /ImageMatrix _imatrix def/BitsPerComponent 8 def /Interpolate true defend image}deflevel2 not{ dontloadlevel2 restore }if%%EndProcSet/_imagedict 15 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate true def currentdict end def/hascolor true def/level2 systemdict /languagelevel known{languagelevel 2 ge}{false}ifelse def/foureq {4 index eq 8 1 roll4 index eq 8 1 roll4 index eq 8 1 roll4 index eq 8 1 rollpop pop pop pop and and and} def/setupbands{gsave/_settransfer systemdict /settransfer get def/_currenttransfer systemdict /currenttransfer get def/_image systemdict /image get def/blank 0 _currenttransfer exec1 _currenttransfer exec eq def/negative blank{0 _currenttransfer exec 0.5 lt}{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def/inverted? negative def/_currentgray systemdict /currentgray get defhascolor{/$b 0 def} {/$b 5 def} ifelse/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub0 1 0 0 setcmykcolor _currentgray 1 exch sub0 0 1 0 setcmykcolor _currentgray 1 exch sub0 0 0 1 setcmykcolor _currentgray 1 exch sub4 {4 copy} repeat1 0 0 0 foureq{/$b 1 store}if0 1 0 0 foureq{/$b 2 store}if0 0 1 0 foureq{/$b 3 store}if0 0 0 1 foureq{/$b 4 store}if0 0 0 0 foureq{/$b 6 store}if}ifblank{/$b 6 store}if$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def/doimage{level2{image}{beginWidth Height BitsPerComponent ImageMatrixDecode length 2 eq{/DataSource load end image}{Decode length 6 eq{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelseMultipleDataSources 3 end DSIColorImage}{Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 getDataSource 2 get DataSource 3 get}{/DataSource load}ifelseMultipleDataSources 4 end DSIColorImage}if}ifelse}ifelse}ifelse}def/dt{/rgbclut xdf /bwclut xdf}def/cl{$i setmatrix translate scale/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get defdoclutimage} def/cd{$i setmatrix translate scalelevel2{_imagedict /ColorSpace get setcolorspace}if/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_imagedict begin/ImageMatrix _imatrix defcurrentdict enddoimage} def/im{$i setmatrix translate scale level2{/DeviceGray setcolorspace 0 setgray}if/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_imagedict begin%/Decode [0 1] def  %/Width _w def%/Height _h def/ImageMatrix _imatrix defcurrentdict end doimage }def/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul addcvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dupst0 exch get .3 mul1 index 1 add st0 exch get .59 mul add1 index 2 add st0 exch get .11 mul add1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if255.0 exch sub cviexch 4 div cvi exchst1 3 1 roll put}for st1}}ifelseimage}def}ifelse/OPIimage{image}def/$i matrix def/bi{scale translate $i currentmatrix pop translate scale setupbands}def/ei{$i setmatrix}def/ik{$i setmatrix translate scale /_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_w _h false _imatrix 5 -1 roll _ds imagemask}def/rs{2 copy translate3 -1 roll neg rotateneg exch neg exch translate}def/cs{_cvmtx astore concat} def/fd{/_fd xdf}def/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def/rf{/_encodindex xdfFontDirectory exch known {findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}foralldup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}{exch pop}ifelse}forall pop}if}ifcurrentdict enddefinefont pop }{pop pop}ifelse} def/cvsf{ findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def/mf{3 -1 roll findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def/wrk1 ( ) def/wdict 16 dict def/Work75 75 string def/Nmk{Work75 cvs dup}def/Npt{put cvn}def/dhOdh{Nmk 2 79 Npt}def/dhBdh{Nmk 2 111 Npt}def/dhSdh{Nmk 2 83 Npt}def/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def/fts{/ftSize exch def}def/mkFT{dup/FontType get 0 eq{dup maxlength dict begin{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forallcurrentdict enddup/FDepVector 2 copy get[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict deftempFT begin/FontMatrix [1 0 0 1 0 0] def/FontType 3 defdup/Encoding get/Encoding exch def/proc2 2 index defdup/ft1 exch def/ft2 1 array def/FontBBox [0 0 1 1] def/BuildChar{CVDict beginexch dup/ftdt xdf beginwdict begin/chr xdf/chrst wrk1 dup 0 chr put defft2 0 get null eq{ft1 dup length 2 add dict begin{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop defcurrentdict end/q exch definefontft2 exch 0 exch put}ifftdt/proc2 get exec end end end}def end tempFT}ifelse3 index exchdefinefont exch pop}def/mb{dup dhBdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{boldproc} exchmkFT pop pop pop exch pop}ifelse }def/mo{dup dhOdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{outproc} exchmkFT pop pop pop exch pop}ifelse }def/ms{dup dhSdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{ShadChar} exchmkFT  pop pop pop exch pop}ifelse }def/outproc{ft1 setfontgsave chrst sfWidth grestoresetcharwidth dblsh}def/boldproc{ft1 setfontgsavechrst sfWidth 1 index 0 ne{exch .05 add exch}ifgrestoresetcharwidthft1 /PaintType get 2 ne{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def/dblsh{currentcolor currentcolorspace 1.0 setgraychrst 0 0 moveto show setcolorspace setcolorft2 0 get setfont chrst 0 0 moveto show}def/ShadChar{ft1 setfontgsavechrst sfWidth 1 index 0 ne{exch .05 add exch}ifgrestoresetcharwidthchrst .06 0 moveto show0 .05 translate dblsh}def/ts{show}def/ta{/_letterSpace xdf/_spaceXtra xdf}def/tf{/_textWidth xdf/_numSpaces xdf/_stringLength xdfdup	stringwidth pop_letterSpace _stringLength 1 sub mul add_spaceXtra _numSpaces mul add_textWidth exch sub /wdif xdf_spaceXtra 0 32wdif _stringLength div_letterSpace add0 6 -1 roll awidthshow}def/pb{/_PageSave save def/showpage{}def}def/pe{_PageSave restore}def/pm{_pm currentmatrix pop}def/_pm matrix def/ps{showpage _pm setmatrix}deflevel2{/ef {gsave 6 array astore concat dup execform grestore}def}{/ef{gsave 6 array astore concat newpath dup begin Matrix concatBBox dup dup 0 get exch 1 get movetodup dup 0 get exch 3 get linetodup dup 2 get exch 3 get linetodup 2 get exch 1 get lineto closepathclip newpath PaintProc end grestore}def}ifelse/bc{save 11 1 roll 10 dict begin /BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def /FormType 1 def/PaintProc{/pp get exec}def}def/ec{pop restore}def/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def/setoverprint where {pop}{/setoverprint{pop}def}ifelse/sstr { /$sstrs exch def /$sstr exch def /$sstry exch def /$sstrx exch def /Courier findfont $sstrs scalefont setfont $sstrx $sstry mt stm 1 -1 scale $sstr show rtm } def/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc	eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}	{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def/DSIEndPaintProc{currentdict end}def/DSIBeginPaintSubProc {save 11 1 roll 10 dict dup /pD exch def begin 	/BBox 5 1 roll 4 array astore def /Matrix 7 1 roll 6 array astore def 	/FormType 1 def /PaintProc { /pp get exec } def /pp} def/DSIEndPaintSubProc {bind def end pD} def/iaa {/ix ix ixn add def} def/ias2 {/igap exch def /_st0 ia ix igap add get def _st0} def/ias {/st0 ia ix get def iaa st0} def/i85s {0 ias2 /ASCII85Decode filter st0 readstring pop iaa} def/irles {0 ias2 /ASCII85Decode filter /RunLengthDecode filter st0 readstring pop iaa} definitializeend%%EndResourceCVDict begin 0 id 1 fd_encodArr 0[39/quotesingle 96/grave128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/bullet/Ydieresis/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis] put_encodArr 1[39/quotesingle 96/grave128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron] putend%%EndProlog %%BeginSetup CVDict begin/ttn {dup level2 {/Font resourcestatus {pop pop exch}if}{FontDirectory exch known {exch}if}ifelse pop dup dup} def0 id1 fd0 165 translate300 -300 scli%%EndSetup %%BeginPageSetup pm%%EndPageSetup/DeviceCMYK scs0 0 0 1. f40.1250 0.1250 sp 0 lc 2 ljT sa%page rect: 61 115 723 279 hs0 0 2757 683 rp 0 hcstm0.668 0.5781 0.6641 0.5039 f4np24.9792 225.853 mt122.7211 -91.8224 520.6862 -29.6739 605.4411 138.6358 ct614.5582 156.741 624.4968 172.9687 607.074 204.605 ct596.9118 223.0576 585.4884 237.6382 572.5446 250.8612 ct561.4003 262.2458 548.0867 271.4139 535.8967 280.5564 ct450.8311 344.3556 321.1158 319.7527 227.317 317.4471 ct149.2427 315.528 58.1473 362.876 13.0202 431.2226 ct0 423.4104 li27.1582 378.7149 59.5246 322.2457 149.7375 286.436 ct261.999 241.8742 353.8646 292.7228 444.95 256.9805 ct362.9781 164.5962 251.6215 157.2982 174.3681 189.4148 ct108.1646 216.9375 51.2321 275.8204 18.6623 340.5149 ct5.6421 335.7408 li104.9268 65.2885 397.4482 91.329 520.8095 234.5516 ct520.8095 234.5516 569.3094 204.5115 562.4006 187.3406 ct519.4044 80.4788 359.9203 21.3656 223.411 51.8343 ct139.4078 70.5837 63.2647 146.0704 41.3289 227.3393 ct41.3289 227.3393 24.6604 226.8891 24.9792 225.853 ctcpdertmstm0.668 0.5781 0.6641 0.5039 f4np624.7275 457.293 mt526.9856 774.9683 129.0206 712.8198 44.2657 544.5101 ct35.1486 526.4049 25.21 510.1772 42.6328 478.5409 ct52.795 460.0883 64.2184 445.5077 77.1622 432.2847 ct88.3065 420.9001 101.62 411.732 113.8101 402.5895 ct198.8756 338.7903 328.591 363.3932 422.3897 365.6988 ct500.4641 367.6179 591.5594 320.27 636.6865 251.9233 ct649.7068 259.7355 li622.5486 304.431 590.1821 360.9002 499.9693 396.7099 ct387.7077 441.2717 295.8421 390.4231 204.7568 426.1654 ct286.7286 518.5498 398.0853 525.8477 475.3387 493.7311 ct541.5421 466.2084 598.4747 407.3255 631.0444 342.631 ct644.0647 347.4051 li544.7799 617.8574 252.2586 591.8169 128.8973 448.5943 ct128.8973 448.5943 80.3974 478.6344 87.3062 495.8053 ct130.3024 602.6671 289.7865 661.7803 426.2958 631.3117 ct510.299 612.5623 586.442 537.0755 608.3779 455.8066 ct608.3779 455.8066 625.0463 456.2568 624.7275 457.293 ctcpdertmstm0.668 0.5781 0.6641 0.5039 f4np862.1852 536.3531 mt825.1455 536.3531 li825.1455 186.7378 li862.1852 187.0863 li862.1852 536.3531 licpdfrtmstm0.668 0.5781 0.6641 0.5039 f4np966.6705 536.3531 mt929.9072 536.3531 li929.9072 306.9812 li966.6705 306.9277 li966.6705 536.3531 licpdertmstm0.668 0.5781 0.6641 0.5039 f4np1193.1017 489.7404 mt1193.1017 337.4351 li1183.7036 334.1181 1175.4111 331.9068 1167.9479 330.2483 ct1160.4846 328.8662 1153.8506 328.037 1148.0459 328.037 ct1122.0628 328.037 1101.8844 336.053 1087.5108 351.8088 ct1073.1372 367.8409 1065.9503 389.9542 1065.9503 418.425 ct1065.9503 445.7902 1072.3079 466.7978 1085.023 482.0007 ct1097.7382 496.9272 1115.4288 504.6668 1138.3713 504.6668 ct1147.4931 504.6668 1156.3384 503.2848 1165.1837 500.797 ct1174.3054 498.5857 1183.4272 494.7159 1193.1017 489.7404 ctcp1229.3122 304.818 mt1229.3122 641.2374 li1193.1017 641.4138 li1193.1017 524.016 li1182.5979 527.333 1172.6469 529.8207 1162.9724 531.4792 ct1153.0214 533.4141 1143.6233 534.2434 1134.5015 534.2434 ct1102.1608 534.2434 1076.4541 524.016 1057.3814 503.2848 ct1038.3087 482.5536 1028.9106 454.9119 1028.9106 420.3599 ct1028.9106 384.4258 1039.6908 355.4022 1061.5277 333.2889 ct1083.0881 311.1756 1111.8354 300.1189 1147.7695 300.1189 ct1154.6799 300.1189 1161.8667 300.3954 1169.6064 301.2246 ct1177.0696 302.0539 1185.0857 303.1595 1193.3781 304.818 ct1229.3122 304.818 licpdertmstm0.668 0.5781 0.6641 0.5039 f4np1274.598 304.818 mt1310.8085 304.818 li1310.8085 440.2619 li1310.8085 460.9931 1314.4019 476.196 1321.3123 485.5941 ct1328.2227 495.2687 1339.003 499.9678 1353.9294 499.9678 ct1375.4899 499.9678 1393.4569 491.9517 1407.5541 475.6432 ct1421.9278 459.611 1429.1146 438.0506 1429.1146 411.2382 ct1429.1146 304.818 li1465.3251 304.818 li1465.3251 534.1899 li1432.4316 534.2434 li1430.2203 485.0413 li1416.9523 501.3499 1403.4079 513.7886 1389.3107 522.0811 ct1375.2135 530.0971 1360.5634 534.2434 1345.6369 534.2434 ct1322.418 534.2434 1305.0038 526.5037 1292.8415 511.3008 ct1280.6792 496.0979 1274.598 473.7082 1274.598 444.6846 ct1274.598 304.818 licpdfrtmstm0.668 0.5781 0.6641 0.5039 f4np1561.0673 536.3531 mt1524.0275 536.3531 li1524.0275 304.818 li1561.0673 305.5712 li1561.0673 536.3531 licpdertmstm0.668 0.5781 0.6641 0.5039 f4np1780.7159 486.3218 mt1780.7159 355.577 li1771.3177 350.6015 1762.196 347.0081 1753.6271 344.5203 ct1744.7818 342.0326 1736.4893 340.6505 1728.4732 340.6505 ct1705.8071 340.6505 1687.8401 348.943 1674.0193 365.2515 ct1660.4749 381.8365 1653.5645 403.3969 1653.5645 430.7621 ct1653.5645 456.1924 1659.6456 476.6472 1671.5315 492.4029 ct1683.4174 508.1586 1698.6203 516.1747 1717.4166 516.1747 ct1728.7496 516.1747 1739.5299 513.687 1750.0337 508.7115 ct1760.8139 503.736 1770.7649 496.2727 1780.7159 486.3218 ctcp1816.9264 536.3531 mt1782.8317 536.1063 li1783.48 520.0445 li1771.5941 529.1663 1759.9847 535.8002 1748.6516 540.2229 ct1737.0421 544.3691 1725.4326 546.5805 1713.5468 546.5805 ct1685.3523 546.5805 1662.1334 536.0767 1643.8899 514.7926 ct1625.6464 493.785 1616.5247 466.6962 1616.5247 433.8027 ct1616.5247 397.8686 1627.3049 368.0157 1648.589 344.5203 ct1669.873 320.7485 1696.6854 308.8626 1729.0261 308.8626 ct1738.1478 308.8626 1746.9931 309.9683 1755.562 312.4561 ct1764.1309 314.9438 1772.4234 318.5372 1780.7159 323.2363 ct1780.7159 187.4161 li1816.9264 187.4782 li1816.9264 536.3531 licpdertmstm0.668 0.5781 0.6641 0.5039 f4np1978.5927 541.8707 mt1965.2849 541.8707 li1854.9254 304.818 li1904.6208 304.818 li1978.0215 461.9011 li2045.3202 304.818 li2069.0594 304.818 li2136.8182 461.9011 li2209.6477 304.818 li2249.9181 304.818 li2145.0251 541.5325 li2127.3932 541.8707 li2052.5646 383.9308 li1978.5927 541.8707 licpdfrtmstm0.668 0.5781 0.6641 0.5039 f4np2455.1734 398.447 mt2454.6206 378.545 2448.263 362.5129 2436.3771 350.3506 ct2424.4912 338.4647 2409.2883 332.3836 2390.4921 332.3836 ct2371.1429 332.3836 2354.2815 339.0176 2339.9079 352.2855 ct2325.5343 365.5535 2316.9654 382.6913 2313.9248 403.9753 ct2455.1734 398.447 licp2478.116 471.4209 mt2475.9046 510.6719 li2462.3602 520.8993 2447.9866 528.639 2433.0601 534.1673 ct2417.8572 539.4192 2402.3779 542.1834 2386.3458 542.1834 ct2353.1759 542.1834 2326.0871 531.6796 2304.8031 510.6719 ct2283.7954 489.3879 2273.0152 462.5755 2273.0152 429.682 ct2273.0152 392.9187 2284.3483 362.7893 2307.0144 339.0176 ct2329.6805 315.2458 2358.1514 303.3599 2392.427 303.3599 ct2422.8327 303.3599 2447.1574 312.4816 2464.848 331.0015 ct2482.5386 349.2449 2491.3839 374.3988 2491.3839 406.1867 ct2491.3839 407.2923 2491.3839 408.6744 2491.1075 410.8857 ct2491.1075 412.8206 2490.8311 414.4791 2490.8311 415.8612 ct2486.4084 425.8122 li2311.4371 431.6169 li2313.6484 456.7708 2321.1116 476.1199 2334.3796 489.3879 ct2347.6476 502.9323 2365.6146 509.5663 2388.2807 509.5663 ct2402.6544 509.5663 2417.028 506.5257 2431.9545 500.1681 ct2446.6045 493.8106 2462.0838 484.136 2478.116 471.4209 ctcpdertmstm0.668 0.5781 0.6641 0.5039 f4np2578.9335 498.7227 mt2589.1609 503.4218 2598.8354 507.2916 2608.2336 509.7793 ct2617.9082 512.2671 2627.0299 513.6492 2635.5988 513.6492 ct2660.1998 513.6492 2679.8254 505.3567 2694.7518 488.7717 ct2709.9547 472.4632 2717.4179 450.6263 2717.4179 423.2611 ct2717.4179 397.278 2710.784 376.5468 2697.516 361.0675 ct2684.248 345.3118 2666.5574 337.5721 2644.7205 337.5721 ct2633.3875 337.5721 2622.3308 340.0599 2611.5506 345.0354 ct2601.0468 349.7344 2589.9901 357.4741 2578.9335 367.4251 ct2578.9335 498.7227 licp2539.406 529.4369 mt2539.406 187.4782 li2578.9335 188.5049 li2578.9335 332.8731 li2590.2665 324.3042 2601.876 317.9466 2614.0383 314.0768 ct2626.2006 309.9305 2639.4686 307.9956 2653.8422 307.9956 ct2683.9716 307.9956 2708.5726 318.7758 2728.1982 340.3363 ct2747.5473 361.8967 2757.4983 389.2619 2757.4983 422.4319 ct2757.4983 458.9188 2746.4416 488.4953 2724.0519 510.885 ct2701.9386 532.9983 2672.6385 544.3314 2636.1516 544.3314 ct2625.095 544.3314 2614.3147 542.9493 2604.0874 540.4615 ct2577.6116 532.2695 2569.8804 528.904 2539.406 529.4369 ctcpdertmstm0.668 0.5781 0.6641 0.5039 f4np25.7741 25.7741 1542.7259 236.9915 epdertmstm0.668 0.5781 0.6641 0.5039 f4np25.7741 25.7741 950.6007 236.9915 epdertmheterminate